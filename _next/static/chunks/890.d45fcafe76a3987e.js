"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[890],{70890:function(t,a,r){r.r(a),r.d(a,{Vote:function(){return l}});var e,o=r(70555),s=r(90462),n=r(49242),i=r(32046),c=r(2593),p=r(61744),d=r(64146);let h=((e={})[e.Against=0]="Against",e[e.For=1]="For",e[e.Abstain=2]="Abstain",e);r(13550),r(2162),r(64063),r(77191),r(54146),r(54098);class l{get chainId(){return this._chainId}constructor(t,a,r){var e=this;let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},c=arguments.length>4?arguments[4]:void 0,p=arguments.length>5?arguments[5]:void 0,d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:new s.dd(t,a,c,n);(0,o._)(this,"contractWrapper",void 0),(0,o._)(this,"storage",void 0),(0,o._)(this,"abi",void 0),(0,o._)(this,"metadata",void 0),(0,o._)(this,"app",void 0),(0,o._)(this,"encoder",void 0),(0,o._)(this,"estimator",void 0),(0,o._)(this,"events",void 0),(0,o._)(this,"interceptor",void 0),(0,o._)(this,"_chainId",void 0),(0,o._)(this,"propose",(0,s.d6)(async(t,a)=>{a||(a=[{toAddress:this.contractWrapper.readContract.address,nativeTokenValue:0,transactionData:"0x"}]);let r=a.map(t=>t.toAddress),e=a.map(t=>t.nativeTokenValue),o=a.map(t=>t.transactionData);return s.aV.fromContractWrapper({contractWrapper:this.contractWrapper,method:"propose",args:[r,e,o,t],parse:t=>{let a=this.contractWrapper.parseLogs("ProposalCreated",t?.logs);return{id:a[0].args.proposalId,receipt:t}}})})),(0,o._)(this,"vote",(0,s.d6)(async function(t,a){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";return await e.ensureExists(t),s.aV.fromContractWrapper({contractWrapper:e.contractWrapper,method:"castVoteWithReason",args:[t,a,r]})})),(0,o._)(this,"execute",(0,s.d6)(async t=>{await this.ensureExists(t);let a=await this.get(t),r=a.executions.map(t=>t.toAddress),e=a.executions.map(t=>t.nativeTokenValue),o=a.executions.map(t=>t.transactionData),n=i.id(a.description);return s.aV.fromContractWrapper({contractWrapper:this.contractWrapper,method:"execute",args:[r,e,o,n]})})),this._chainId=p,this.abi=s.e.parse(c||[]),this.contractWrapper=d,this.storage=r,this.metadata=new s.ag(this.contractWrapper,s.dL,this.storage),this.app=new s.a$(this.contractWrapper,this.metadata,this.storage),this.encoder=new s.af(this.contractWrapper),this.estimator=new s.aP(this.contractWrapper),this.events=new s.aQ(this.contractWrapper),this.interceptor=new s.aR(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.readContract.address}async get(t){let a=await this.getAll(),r=a.filter(a=>a.proposalId.eq(c.O$.from(t)));if(0===r.length)throw Error("proposal not found");return r[0]}async getAll(){return Promise.all((await this.contractWrapper.readContract.getAllProposals()).map(async t=>({proposalId:t.proposalId,proposer:t.proposer,description:t.description,startBlock:t.startBlock,endBlock:t.endBlock,state:await this.contractWrapper.readContract.state(t.proposalId),votes:await this.getProposalVotes(t.proposalId),executions:t[3].map((a,r)=>({toAddress:t.targets[r],nativeTokenValue:a,transactionData:t.calldatas[r]}))})))}async getProposalVotes(t){let a=await this.contractWrapper.readContract.proposalVotes(t);return[{type:h.Against,label:"Against",count:a.againstVotes},{type:h.For,label:"For",count:a.forVotes},{type:h.Abstain,label:"Abstain",count:a.abstainVotes}]}async hasVoted(t,a){return a||(a=await this.contractWrapper.getSignerAddress()),this.contractWrapper.readContract.hasVoted(t,await (0,s.cs)(a))}async canExecute(t){await this.ensureExists(t);let a=await this.get(t),r=a.executions.map(t=>t.toAddress),e=a.executions.map(t=>t.nativeTokenValue),o=a.executions.map(t=>t.transactionData),s=i.id(a.description);try{return await this.contractWrapper.callStatic().execute(r,e,o,s),!0}catch(t){return!1}}async balance(){let t=await this.contractWrapper.readContract.provider.getBalance(this.contractWrapper.readContract.address);return{name:"",symbol:"",decimals:18,value:t,displayValue:p.formatUnits(t,18)}}async balanceOfToken(t){let a=new d.CH(await (0,s.cs)(t),n,this.contractWrapper.getProvider());return await (0,s.bd)(this.contractWrapper.getProvider(),t,await a.balanceOf(this.contractWrapper.readContract.address))}async ensureExists(t){try{await this.contractWrapper.readContract.state(t)}catch(a){throw Error(`Proposal ${t} not found`)}}async settings(){let[t,a,r,e,o]=await Promise.all([this.contractWrapper.readContract.votingDelay(),this.contractWrapper.readContract.votingPeriod(),this.contractWrapper.readContract.token(),this.contractWrapper.readContract["quorumNumerator()"](),this.contractWrapper.readContract.proposalThreshold()]),n=await (0,s.bc)(this.contractWrapper.getProvider(),r);return{votingDelay:t.toString(),votingPeriod:a.toString(),votingTokenAddress:r,votingTokenMetadata:n,votingQuorumFraction:e.toString(),proposalTokenThreshold:o.toString()}}async prepare(t,a,r){return s.aV.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:a,overrides:r})}async call(t,a,r){return this.contractWrapper.call(t,a,r)}}}}]);